{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\18562\\\\Desktop\\\\real-estate\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\18562\\\\Desktop\\\\real-estate\\\\react-app\\\\src\\\\components\\\\AppointmentApp.js\";\nimport React, { Component } from \"react\"; // import AppBar from \"material-ui/AppBar\";\n\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport FlatButton from \"material-ui/FlatButton\";\nimport moment from \"moment\";\nimport DatePicker from \"material-ui/DatePicker\";\nimport Dialog from \"material-ui/Dialog\";\nimport SelectField from \"material-ui/SelectField\";\nimport MenuItem from \"material-ui/MenuItem\";\nimport TextField from \"material-ui/TextField\";\nimport SnackBar from \"material-ui/Snackbar\";\nimport Card from \"material-ui/Card\";\nimport { Step, Stepper, StepLabel, StepContent } from \"material-ui/Stepper\";\nimport { RadioButton, RadioButtonGroup } from \"material-ui/RadioButton\";\nimport axios from \"axios\"; //express api\n\nconst API_BASE = \"http://localhost:5000/\";\n\nclass AppointmentApp extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleNext = () => {\n      const stepIndex = this.state.stepIndex;\n      this.setState({\n        stepIndex: stepIndex + 1,\n        finished: stepIndex >= 2\n      });\n    };\n\n    this.handlePrev = () => {\n      const stepIndex = this.state.stepIndex;\n\n      if (stepIndex > 0) {\n        this.setState({\n          stepIndex: stepIndex - 1\n        });\n      }\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      schedule: [],\n      confirmationModalOpen: false,\n      appointmentDateSelected: false,\n      appointmentMeridiem: 0,\n      finished: false,\n      smallScreen: window.innerWidth < 768,\n      stepIndex: 0\n    };\n  } //previous scheduled appointments slots are retrieved\n\n\n  componentWillMount() {\n    axios.get(API_BASE + \"slot\").then(response => {\n      console.log(\"response via db: \", response.data);\n      this.handleDBReponse(response.data);\n    });\n  } //set state\n\n\n  handleSetAppointmentDate(date) {\n    this.setState({\n      appointmentDate: date,\n      confirmationTextVisible: true\n    });\n  }\n\n  handleSetAppointmentSlot(slot) {\n    this.setState({\n      appointmentSlot: slot\n    });\n  }\n\n  handleSetAppointmentMeridiem(meridiem) {\n    this.setState({\n      appointmentMeridiem: meridiem\n    });\n  } //pass user data to the database via the express app\n\n\n  handleSubmit() {\n    this.setState({\n      confirmationModalOpen: false\n    });\n    const newAppointment = {\n      name: this.state.firstName + \" \" + this.state.lastName,\n      email: this.state.email,\n      phone: this.state.phone,\n      slot_date: moment(this.state.appointmentDate).format(\"YYYY-DD-MM\"),\n      slot_time: this.state.appointmentSlot\n    };\n    axios.post(API_BASE + \"appointment\", newAppointment).then(response => this.setState({\n      confirmationSnackbarMessage: \"Appointment succesfully added!\",\n      confirmationSnackbarOpen: true,\n      processed: true\n    })).catch(err => {\n      console.log(err);\n      return this.setState({\n        confirmationSnackbarMessage: \"Appointment failed to save.\",\n        confirmationSnackbarOpen: true\n      });\n    });\n  } //moves the stepper to the next postion using the stepIndex field\n\n\n  //passes disabled dates to the date picker component\n  checkDisableDate(day) {\n    const dateString = moment(day).format(\"YYYY-DD-MM\");\n    return this.state.schedule[dateString] === true || moment(day).startOf(\"day\").diff(moment().startOf(\"day\")) < 0;\n  } //handle the appointment slot data from the database\n\n\n  handleDBReponse(response) {\n    const appointments = response;\n    const today = moment().startOf(\"day\"); //start of today 12 am\n\n    const initialSchedule = {};\n    initialSchedule[today.format(\"YYYY-DD-MM\")] = true; // const schedule = !appointments.length\n    //   ? initialSchedule\n    //   : appointments.reduce((currentSchedule, appointment) => {\n    //       const { slot_date, slot_time } = appointment;\n    //       const dateString = moment(slot_date, \"YYYY-DD-MM\").format(\n    //         \"YYYY-DD-MM\"\n    //       );\n    //       !currentSchedule[slot_date]\n    //         ? (currentSchedule[dateString] = Array(8).fill(false))\n    //         : null;\n    //       Array.isArray(currentSchedule[dateString])\n    //         ? (currentSchedule[dateString][slot_time] = true)\n    //         : null;\n    //       return currentSchedule;\n    //     }, initialSchedule);\n    // for (let day in schedule) {\n    //   let slots = schedule[day];\n    //   slots.length\n    //     ? slots.every(slot => slot === true) ? (schedule[day] = true) : null\n    //     : null;\n    // }\n\n    this.setState({// schedule: schedule\n    });\n  } //display a modal with the userâ€™s inputted information and asks th user to confirm\n\n\n  renderAppointmentConfirmation() {\n    const spanStyle = {\n      color: \"#00C853\"\n    };\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Name:\", \" \", React.createElement(\"span\", {\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.firstName, \" \", this.state.lastName)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Email: \", React.createElement(\"span\", {\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.email)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Appointment:\", \" \", React.createElement(\"span\", {\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, moment(this.state.appointmentDate).format(\"dddd[,] MMMM Do[,] YYYY\")), \" \", \"at\", \" \", React.createElement(\"span\", {\n      style: spanStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, moment().hour(9).minute(0).add(this.state.appointmentSlot, \"hours\").format(\"h:mm a\"))));\n  } //renders available time slots to user and disables the rest if any\n\n\n  renderAppointmentTimes() {\n    if (!this.state.isLoading) {\n      const slots = [...Array(8).keys()];\n      return slots.map(slot => {\n        const appointmentDateString = moment(this.state.appointmentDate).format(\"YYYY-DD-MM\");\n        const time1 = moment().hour(9).minute(0).add(slot, \"hours\");\n        const time2 = moment().hour(9).minute(0).add(slot + 1, \"hours\");\n        const scheduleDisabled = this.state.schedule[appointmentDateString] ? this.state.schedule[moment(this.state.appointmentDate).format(\"YYYY-DD-MM\")][slot] : false;\n        const meridiemDisabled = this.state.appointmentMeridiem ? time1.format(\"a\") === \"am\" : time1.format(\"a\") === \"pm\";\n        return React.createElement(RadioButton, {\n          label: time1.format(\"h:mm a\") + \" - \" + time2.format(\"h:mm a\"),\n          key: slot,\n          value: slot,\n          style: {\n            marginBottom: 15,\n            display: meridiemDisabled ? \"none\" : \"inherit\"\n          },\n          disabled: scheduleDisabled || meridiemDisabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        });\n      });\n    } else {\n      return null;\n    }\n  }\n\n  renderStepActions(step) {\n    const stepIndex = this.state.stepIndex;\n    return React.createElement(\"div\", {\n      style: {\n        margin: \"12px 0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(RaisedButton, {\n      label: stepIndex === 2 ? \"Finish\" : \"Next\",\n      disableTouchRipple: true,\n      disableFocusRipple: true,\n      primary: true,\n      onClick: this.handleNext,\n      backgroundColor: \"#00C853 !important\",\n      style: {\n        marginRight: 12,\n        backgroundColor: \"#00C853\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), step > 0 && React.createElement(FlatButton, {\n      label: \"Back\",\n      disabled: stepIndex === 0,\n      disableTouchRipple: true,\n      disableFocusRipple: true,\n      onClick: this.handlePrev,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          finished = _this$state.finished,\n          isLoading = _this$state.isLoading,\n          smallScreen = _this$state.smallScreen,\n          stepIndex = _this$state.stepIndex,\n          confirmationModalOpen = _this$state.confirmationModalOpen,\n          confirmationSnackbarOpen = _this$state.confirmationSnackbarOpen,\n          data = _objectWithoutProperties(_this$state, [\"finished\", \"isLoading\", \"smallScreen\", \"stepIndex\", \"confirmationModalOpen\", \"confirmationSnackbarOpen\"]);\n\n    const contactFormFilled = data.firstName && data.lastName && data.email;\n\n    const DatePickerExampleSimple = () => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      hintText: \"Select Date\",\n      mode: smallScreen ? \"portrait\" : \"landscape\",\n      onChange: (n, date) => this.handleSetAppointmentDate(date),\n      shouldDisableDate: day => this.checkDisableDate(day),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }));\n\n    const modalActions = [React.createElement(FlatButton, {\n      label: \"Cancel\",\n      primary: false,\n      onClick: () => this.setState({\n        confirmationModalOpen: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(FlatButton, {\n      label: \"Confirm\",\n      style: {\n        backgroundColor: \"#00C853 !important\"\n      },\n      primary: true,\n      onClick: () => this.handleSubmit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    })];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      style: {\n        maxWidth: !smallScreen ? \"80%\" : \"100%\",\n        margin: \"auto\",\n        marginTop: !smallScreen ? 20 : 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        padding: \"12px 12px 25px 12px\",\n        height: smallScreen ? \"100vh\" : null\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(Stepper, {\n      activeStep: stepIndex,\n      orientation: \"vertical\",\n      linear: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Step, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(StepLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Choose an available day for your appointment\"), React.createElement(StepContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, DatePickerExampleSimple(), this.renderStepActions(0))), React.createElement(Step, {\n      disabled: !data.appointmentDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(StepLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"Choose an available time for your appointment\"), React.createElement(StepContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(SelectField, {\n      floatingLabelText: \"AM/PM\",\n      value: data.appointmentMeridiem,\n      onChange: (evt, key, payload) => this.handleSetAppointmentMeridiem(payload),\n      selectionRenderer: value => value ? \"PM\" : \"AM\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: 0,\n      primaryText: \"AM\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }), React.createElement(MenuItem, {\n      value: 1,\n      primaryText: \"PM\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    })), React.createElement(RadioButtonGroup, {\n      style: {\n        marginTop: 15,\n        marginLeft: 15\n      },\n      name: \"appointmentTimes\",\n      defaultSelected: data.appointmentSlot,\n      onChange: (evt, val) => this.handleSetAppointmentSlot(val),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, this.renderAppointmentTimes()), this.renderStepActions(1))), React.createElement(Step, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(StepLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"Share your contact information with us and we'll send you a reminder\"), React.createElement(StepContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      style: {\n        display: \"block\"\n      },\n      name: \"first_name\",\n      hintText: \"First Name\",\n      floatingLabelText: \"First Name\",\n      onChange: (evt, newValue) => this.setState({\n        firstName: newValue\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      style: {\n        display: \"block\"\n      },\n      name: \"last_name\",\n      hintText: \"Last Name\",\n      floatingLabelText: \"Last Name\",\n      onChange: (evt, newValue) => this.setState({\n        lastName: newValue\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      style: {\n        display: \"block\"\n      },\n      name: \"email\",\n      hintText: \"youraddress@mail.com\",\n      floatingLabelText: \"Email\",\n      onChange: (evt, newValue) => this.setState({\n        email: newValue\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }), React.createElement(RaisedButton, {\n      style: {\n        display: \"block\",\n        backgroundColor: \"#00C853\"\n      },\n      label: contactFormFilled ? \"Schedule\" : \"Fill out your information to schedule\",\n      labelPosition: \"before\",\n      primary: true,\n      fullWidth: true,\n      onClick: () => this.setState({\n        confirmationModalOpen: !this.state.confirmationModalOpen\n      }),\n      disabled: !contactFormFilled || data.processed,\n      style: {\n        marginTop: 20,\n        maxWidth: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }))), this.renderStepActions(2))))), React.createElement(Dialog, {\n      modal: true,\n      open: confirmationModalOpen,\n      actions: modalActions,\n      title: \"Confirm your appointment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, this.renderAppointmentConfirmation()), React.createElement(SnackBar, {\n      open: confirmationSnackbarOpen || isLoading,\n      message: isLoading ? \"Loading... \" : data.confirmationSnackbarMessage || \"\",\n      autoHideDuration: 10000,\n      onRequestClose: () => this.setState({\n        confirmationSnackbarOpen: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AppointmentApp;","map":{"version":3,"sources":["C:\\Users\\18562\\Desktop\\real-estate\\react-app\\src\\components\\AppointmentApp.js"],"names":["React","Component","RaisedButton","FlatButton","moment","DatePicker","Dialog","SelectField","MenuItem","TextField","SnackBar","Card","Step","Stepper","StepLabel","StepContent","RadioButton","RadioButtonGroup","axios","API_BASE","AppointmentApp","constructor","props","context","handleNext","stepIndex","state","setState","finished","handlePrev","firstName","lastName","email","schedule","confirmationModalOpen","appointmentDateSelected","appointmentMeridiem","smallScreen","window","innerWidth","componentWillMount","get","then","response","console","log","data","handleDBReponse","handleSetAppointmentDate","date","appointmentDate","confirmationTextVisible","handleSetAppointmentSlot","slot","appointmentSlot","handleSetAppointmentMeridiem","meridiem","handleSubmit","newAppointment","name","phone","slot_date","format","slot_time","post","confirmationSnackbarMessage","confirmationSnackbarOpen","processed","catch","err","checkDisableDate","day","dateString","startOf","diff","appointments","today","initialSchedule","renderAppointmentConfirmation","spanStyle","color","hour","minute","add","renderAppointmentTimes","isLoading","slots","Array","keys","map","appointmentDateString","time1","time2","scheduleDisabled","meridiemDisabled","marginBottom","display","renderStepActions","step","margin","marginRight","backgroundColor","render","contactFormFilled","DatePickerExampleSimple","n","modalActions","maxWidth","marginTop","padding","height","evt","key","payload","value","marginLeft","val","newValue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n// import AppBar from \"material-ui/AppBar\";\r\nimport RaisedButton from \"material-ui/RaisedButton\";\r\nimport FlatButton from \"material-ui/FlatButton\";\r\nimport moment from \"moment\";\r\nimport DatePicker from \"material-ui/DatePicker\";\r\nimport Dialog from \"material-ui/Dialog\";\r\nimport SelectField from \"material-ui/SelectField\";\r\nimport MenuItem from \"material-ui/MenuItem\";\r\nimport TextField from \"material-ui/TextField\";\r\nimport SnackBar from \"material-ui/Snackbar\";\r\nimport Card from \"material-ui/Card\";\r\nimport {\r\n  Step,\r\n  Stepper,\r\n  StepLabel,\r\n  StepContent\r\n} from \"material-ui/Stepper\";\r\nimport { RadioButton, RadioButtonGroup } from \"material-ui/RadioButton\";\r\nimport axios from \"axios\";\r\n\r\n//express api\r\nconst API_BASE = \"http://localhost:5000/\";\r\n\r\nclass AppointmentApp extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      schedule: [],\r\n      confirmationModalOpen: false,\r\n      appointmentDateSelected: false,\r\n      appointmentMeridiem: 0,\r\n      finished: false,\r\n      smallScreen: window.innerWidth < 768,\r\n      stepIndex: 0\r\n    };\r\n  }\r\n  //previous scheduled appointments slots are retrieved\r\n  componentWillMount() {\r\n    axios.get(API_BASE + \"slot\").then(response => {\r\n      console.log(\"response via db: \", response.data);\r\n      this.handleDBReponse(response.data);\r\n    });\r\n  }\r\n  //set state\r\n  handleSetAppointmentDate(date) {\r\n    this.setState({ appointmentDate: date, confirmationTextVisible: true });\r\n  }\r\n\r\n  handleSetAppointmentSlot(slot) {\r\n    this.setState({ appointmentSlot: slot });\r\n  }\r\n  handleSetAppointmentMeridiem(meridiem) {\r\n    this.setState({ appointmentMeridiem: meridiem });\r\n  }\r\n  //pass user data to the database via the express app\r\n  handleSubmit() {\r\n    this.setState({ confirmationModalOpen: false });\r\n    const newAppointment = {\r\n      name: this.state.firstName + \" \" + this.state.lastName,\r\n      email: this.state.email,\r\n      phone: this.state.phone,\r\n      slot_date: moment(this.state.appointmentDate).format(\"YYYY-DD-MM\"),\r\n      slot_time: this.state.appointmentSlot\r\n    };\r\n    axios\r\n      .post(API_BASE + \"appointment\", newAppointment)\r\n      .then(response =>\r\n        this.setState({\r\n          confirmationSnackbarMessage: \"Appointment succesfully added!\",\r\n          confirmationSnackbarOpen: true,\r\n          processed: true\r\n        })\r\n      )\r\n      .catch(err => {\r\n        console.log(err);\r\n        return this.setState({\r\n          confirmationSnackbarMessage: \"Appointment failed to save.\",\r\n          confirmationSnackbarOpen: true\r\n        });\r\n      });\r\n  }\r\n  //moves the stepper to the next postion using the stepIndex field\r\n  handleNext = () => {\r\n    const { stepIndex } = this.state;\r\n    this.setState({\r\n      stepIndex: stepIndex + 1,\r\n      finished: stepIndex >= 2\r\n    });\r\n  };\r\n  //moves the stepper to the previous postion using the stepIndex field\r\n  handlePrev = () => {\r\n    const { stepIndex } = this.state;\r\n    if (stepIndex > 0) {\r\n      this.setState({ stepIndex: stepIndex - 1 });\r\n    }\r\n  };\r\n  //passes disabled dates to the date picker component\r\n  checkDisableDate(day) {\r\n    const dateString = moment(day).format(\"YYYY-DD-MM\");\r\n    return (\r\n      this.state.schedule[dateString] === true ||\r\n      moment(day)\r\n        .startOf(\"day\")\r\n        .diff(moment().startOf(\"day\")) < 0\r\n    );\r\n  }\r\n\r\n  //handle the appointment slot data from the database\r\n  handleDBReponse(response) {\r\n    const appointments = response;\r\n    const today = moment().startOf(\"day\"); //start of today 12 am\r\n    const initialSchedule = {};\r\n    initialSchedule[today.format(\"YYYY-DD-MM\")] = true;\r\n    // const schedule = !appointments.length\r\n    //   ? initialSchedule\r\n    //   : appointments.reduce((currentSchedule, appointment) => {\r\n    //       const { slot_date, slot_time } = appointment;\r\n    //       const dateString = moment(slot_date, \"YYYY-DD-MM\").format(\r\n    //         \"YYYY-DD-MM\"\r\n    //       );\r\n    //       !currentSchedule[slot_date]\r\n    //         ? (currentSchedule[dateString] = Array(8).fill(false))\r\n    //         : null;\r\n    //       Array.isArray(currentSchedule[dateString])\r\n    //         ? (currentSchedule[dateString][slot_time] = true)\r\n    //         : null;\r\n    //       return currentSchedule;\r\n    //     }, initialSchedule);\r\n\r\n    // for (let day in schedule) {\r\n    //   let slots = schedule[day];\r\n    //   slots.length\r\n    //     ? slots.every(slot => slot === true) ? (schedule[day] = true) : null\r\n    //     : null;\r\n    // }\r\n\r\n    this.setState({\r\n      // schedule: schedule\r\n    });\r\n  }\r\n  //display a modal with the userâ€™s inputted information and asks th user to confirm\r\n  renderAppointmentConfirmation() {\r\n    const spanStyle = { color: \"#00C853\" };\r\n    return (\r\n      <section>\r\n        <p>\r\n          Name:{\" \"}\r\n          <span style={spanStyle}>\r\n            {this.state.firstName} {this.state.lastName}\r\n          </span>\r\n        </p>       \r\n        <p>\r\n          Email: <span style={spanStyle}>{this.state.email}</span>\r\n        </p>\r\n        <p>\r\n          Appointment:{\" \"}\r\n          <span style={spanStyle}>\r\n            {moment(this.state.appointmentDate).format(\r\n              \"dddd[,] MMMM Do[,] YYYY\"\r\n            )}\r\n          </span>{\" \"}\r\n          at{\" \"}\r\n          <span style={spanStyle}>\r\n            {moment()\r\n              .hour(9)\r\n              .minute(0)\r\n              .add(this.state.appointmentSlot, \"hours\")\r\n              .format(\"h:mm a\")}\r\n          </span>\r\n        </p>\r\n      </section>\r\n    );\r\n  }\r\n  //renders available time slots to user and disables the rest if any\r\n  renderAppointmentTimes() {\r\n    if (!this.state.isLoading) {\r\n      const slots = [...Array(8).keys()];\r\n      return slots.map(slot => {\r\n        const appointmentDateString = moment(this.state.appointmentDate).format(\r\n          \"YYYY-DD-MM\"\r\n        );\r\n        const time1 = moment()\r\n          .hour(9)\r\n          .minute(0)\r\n          .add(slot, \"hours\");\r\n        const time2 = moment()\r\n          .hour(9)\r\n          .minute(0)\r\n          .add(slot + 1, \"hours\");\r\n        const scheduleDisabled = this.state.schedule[appointmentDateString]\r\n          ? this.state.schedule[\r\n              moment(this.state.appointmentDate).format(\"YYYY-DD-MM\")\r\n            ][slot]\r\n          : false;\r\n        const meridiemDisabled = this.state.appointmentMeridiem\r\n          ? time1.format(\"a\") === \"am\"\r\n          : time1.format(\"a\") === \"pm\";\r\n        return (\r\n          <RadioButton\r\n            label={time1.format(\"h:mm a\") + \" - \" + time2.format(\"h:mm a\")}\r\n            key={slot}\r\n            value={slot}\r\n            style={{\r\n              marginBottom: 15,\r\n              display: meridiemDisabled ? \"none\" : \"inherit\"\r\n            }}\r\n            disabled={scheduleDisabled || meridiemDisabled}\r\n          />\r\n        );\r\n      });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  renderStepActions(step) {\r\n    const { stepIndex } = this.state;\r\n\r\n    return (\r\n      <div style={{ margin: \"12px 0\" }}>\r\n        <RaisedButton\r\n          label={stepIndex === 2 ? \"Finish\" : \"Next\"}\r\n          disableTouchRipple={true}\r\n          disableFocusRipple={true}\r\n          primary={true}\r\n          onClick={this.handleNext}\r\n          backgroundColor=\"#00C853 !important\"\r\n          style={{ marginRight: 12, backgroundColor: \"#00C853\" }}\r\n        />\r\n        {step > 0 && (\r\n          <FlatButton\r\n            label=\"Back\"\r\n            disabled={stepIndex === 0}\r\n            disableTouchRipple={true}\r\n            disableFocusRipple={true}\r\n            onClick={this.handlePrev}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const {\r\n      finished,\r\n      isLoading,\r\n      smallScreen,\r\n      stepIndex,\r\n      confirmationModalOpen,\r\n      confirmationSnackbarOpen,\r\n      ...data\r\n    } = this.state;\r\n    const contactFormFilled =\r\n      data.firstName &&\r\n      data.lastName &&      \r\n      data.email     \r\n    const DatePickerExampleSimple = () => (\r\n      <div>\r\n        <DatePicker\r\n          hintText=\"Select Date\"\r\n          mode={smallScreen ? \"portrait\" : \"landscape\"}\r\n          onChange={(n, date) => this.handleSetAppointmentDate(date)}\r\n          shouldDisableDate={day => this.checkDisableDate(day)}\r\n        />\r\n      </div>\r\n    );\r\n    const modalActions = [\r\n      <FlatButton\r\n        label=\"Cancel\"\r\n        primary={false}\r\n        onClick={() => this.setState({ confirmationModalOpen: false })}\r\n      />,\r\n      <FlatButton\r\n        label=\"Confirm\"\r\n        style={{ backgroundColor: \"#00C853 !important\" }}\r\n        primary={true}\r\n        onClick={() => this.handleSubmit()}\r\n      />\r\n    ];\r\n    \r\n    return (\r\n      <div>\r\n        {/* <AppBar\r\n          title=\"Appointment Scheduler\"\r\n          iconClassNameRight=\"muidocs-icon-navigation-expand-more\"\r\n        /> */}\r\n        <section\r\n          style={{\r\n            maxWidth: !smallScreen ? \"80%\" : \"100%\",\r\n            margin: \"auto\",\r\n            marginTop: !smallScreen ? 20 : 0\r\n          }}\r\n        >\r\n          <Card\r\n            style={{\r\n              padding: \"12px 12px 25px 12px\",\r\n              height: smallScreen ? \"100vh\" : null\r\n            }}\r\n          >\r\n            <Stepper\r\n              activeStep={stepIndex}\r\n              orientation=\"vertical\"\r\n              linear={false}\r\n            >\r\n              <Step>\r\n                <StepLabel>\r\n                  Choose an available day for your appointment\r\n                </StepLabel>\r\n                <StepContent>\r\n                  {DatePickerExampleSimple()}\r\n                  {this.renderStepActions(0)}\r\n                </StepContent>\r\n              </Step>\r\n              <Step disabled={!data.appointmentDate}>\r\n                <StepLabel>\r\n                  Choose an available time for your appointment\r\n                </StepLabel>\r\n                <StepContent>\r\n                  <SelectField\r\n                    floatingLabelText=\"AM/PM\"\r\n                    value={data.appointmentMeridiem}\r\n                    onChange={(evt, key, payload) =>\r\n                      this.handleSetAppointmentMeridiem(payload)\r\n                    }\r\n                    selectionRenderer={value => (value ? \"PM\" : \"AM\")}\r\n                  >\r\n                    <MenuItem value={0} primaryText=\"AM\" />\r\n                    <MenuItem value={1} primaryText=\"PM\" />\r\n                  </SelectField>\r\n                  <RadioButtonGroup\r\n                    style={{\r\n                      marginTop: 15,\r\n                      marginLeft: 15\r\n                    }}\r\n                    name=\"appointmentTimes\"\r\n                    defaultSelected={data.appointmentSlot}\r\n                    onChange={(evt, val) => this.handleSetAppointmentSlot(val)}\r\n                  >\r\n                    {this.renderAppointmentTimes()}\r\n                  </RadioButtonGroup>\r\n                  {this.renderStepActions(1)}\r\n                </StepContent>\r\n              </Step>\r\n              <Step>\r\n                <StepLabel>\r\n                  Share your contact information with us and we'll send you a\r\n                  reminder\r\n                </StepLabel>\r\n                <StepContent>\r\n                  <p>\r\n                    <section>\r\n                      <TextField\r\n                        style={{ display: \"block\" }}\r\n                        name=\"first_name\"\r\n                        hintText=\"First Name\"\r\n                        floatingLabelText=\"First Name\"\r\n                        onChange={(evt, newValue) =>\r\n                          this.setState({ firstName: newValue })\r\n                        }\r\n                      />\r\n                      <TextField\r\n                        style={{ display: \"block\" }}\r\n                        name=\"last_name\"\r\n                        hintText=\"Last Name\"\r\n                        floatingLabelText=\"Last Name\"\r\n                        onChange={(evt, newValue) =>\r\n                          this.setState({ lastName: newValue })\r\n                        }\r\n                      />\r\n                      <TextField\r\n                        style={{ display: \"block\" }}\r\n                        name=\"email\"\r\n                        hintText=\"youraddress@mail.com\"\r\n                        floatingLabelText=\"Email\"                        \r\n                        onChange={(evt, newValue) =>\r\n                          this.setState({ email: newValue })\r\n                        }\r\n                      />                     \r\n                      <RaisedButton\r\n                        style={{ display: \"block\", backgroundColor: \"#00C853\" }}\r\n                        label={\r\n                          contactFormFilled\r\n                            ? \"Schedule\"\r\n                            : \"Fill out your information to schedule\"\r\n                        }\r\n                        labelPosition=\"before\"\r\n                        primary={true}\r\n                        fullWidth={true}\r\n                        onClick={() =>\r\n                          this.setState({\r\n                            confirmationModalOpen: !this.state\r\n                              .confirmationModalOpen\r\n                          })\r\n                        }\r\n                        disabled={!contactFormFilled || data.processed}\r\n                        style={{ marginTop: 20, maxWidth: 100 }}\r\n                      />\r\n                    </section>\r\n                  </p>\r\n                  {this.renderStepActions(2)}\r\n                </StepContent>\r\n              </Step>\r\n            </Stepper>\r\n          </Card>\r\n          <Dialog\r\n            modal={true}\r\n            open={confirmationModalOpen}\r\n            actions={modalActions}\r\n            title=\"Confirm your appointment\"\r\n          >\r\n            {this.renderAppointmentConfirmation()}\r\n          </Dialog>\r\n          <SnackBar\r\n            open={confirmationSnackbarOpen || isLoading}\r\n            message={\r\n              isLoading ? \"Loading... \" : data.confirmationSnackbarMessage || \"\"\r\n            }\r\n            autoHideDuration={10000}\r\n            onRequestClose={() =>\r\n              this.setState({ confirmationSnackbarOpen: false })\r\n            }\r\n          />\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AppointmentApp;"]},"metadata":{},"sourceType":"module"}