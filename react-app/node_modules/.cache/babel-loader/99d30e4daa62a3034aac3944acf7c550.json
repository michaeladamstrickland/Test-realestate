{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\18562\\\\Desktop\\\\resort\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\18562\\\\Desktop\\\\resort\\\\src\\\\Context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext(); // <RoomContext.Provider value={}\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true\n    };\n  }\n\n  // getData\n  componentDidMount() {\n    // this.getData\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featuredRooms === true);\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let room = _objectSpread({}, item.fields, {\n        images,\n        id\n      });\n\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return React.createElement(RoomContext.Provider, {\n      value: _objectSpread({}, this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["C:\\Users\\18562\\Desktop\\resort\\src\\Context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","componentDidMount","formatData","filter","room","setState","tempItems","map","item","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,QAAlB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB,C,CACA;;AACA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCK,KADiC,GACzB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,aAAa,EAAE,EAHX;AAIJC,MAAAA,OAAO,EAAE;AAJL,KADyB;AAAA;;AAOjC;AAEAC,EAAAA,iBAAiB,GAAG;AAChB;AACA,QAAIJ,KAAK,GAAG,KAAKK,UAAL,CAAgBV,KAAhB,CAAZ;AACA,QAAIO,aAAa,GAAGF,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACL,aAAL,KAAuB,IAA5C,CAApB;AACA,SAAKM,QAAL,CAAc;AACVR,MAAAA,KADU;AAETE,MAAAA,aAFS;AAGTD,MAAAA,WAAW,EAACD,KAHH;AAITG,MAAAA,OAAO,EAAC;AAJC,KAAd;AAMH;;AAEDE,EAAAA,UAAU,CAACV,KAAD,EAAQ;AACd,QAAIc,SAAS,GAAGd,KAAK,CAACe,GAAN,CAAUC,IAAI,IAAI;AAC9B,UAAIC,EAAE,GAAGD,IAAI,CAACE,GAAL,CAASD,EAAlB;AACA,UAAIE,MAAM,GAAGH,IAAI,CAACI,MAAL,CAAYD,MAAZ,CAAmBJ,GAAnB,CAAuBM,KAAK,IAAIA,KAAK,CAACD,MAAN,CAAaE,IAAb,CAAkBC,GAAlD,CAAb;;AAEA,UAAIX,IAAI,qBAAOI,IAAI,CAACI,MAAZ;AAAmBD,QAAAA,MAAnB;AAA0BF,QAAAA;AAA1B,QAAR;;AACA,aAAOL,IAAP;AACH,KANe,CAAhB;AAOA,WAAOE,SAAP;AACH;;AAUDU,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD,CAAa,QAAb;AACI,MAAA,KAAK,oBAAO,KAAKpB,KAAZ,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKqB,KAAL,CAAWC,QAFhB,CADJ;AAQH;;AAjDgC;;AAqDrC,MAAMC,YAAY,GAAG1B,WAAW,CAAC2B,QAAjC;AAEA,SAASzB,YAAT,EAAuBwB,YAAvB,EAAqC1B,WAArC","sourcesContent":["import React, { Component } from 'react'\r\nimport items from './data'\r\n\r\nconst RoomContext = React.createContext();\r\n// <RoomContext.Provider value={}\r\nclass RoomProvider extends Component {\r\n    state = {\r\n        rooms: [],\r\n        sortedRooms: [],\r\n        featuredRooms: [],\r\n        loading: true\r\n    };\r\n    // getData\r\n\r\n    componentDidMount() {\r\n        // this.getData\r\n        let rooms = this.formatData(items)\r\n        let featuredRooms = rooms.filter(room => room.featuredRooms === true);\r\n        this.setState({\r\n            rooms,\r\n             featuredRooms,\r\n             sortedRooms:rooms,\r\n             loading:false\r\n        });\r\n    }\r\n\r\n    formatData(items) {\r\n        let tempItems = items.map(item => {\r\n            let id = item.sys.id\r\n            let images = item.fields.images.map(image => image.fields.file.url);\r\n\r\n            let room = {...item.fields,images,id}\r\n            return room;\r\n        });\r\n        return tempItems;\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <RoomContext.Provider\r\n                value={{ ...this.state }}>\r\n                {this.props.children}\r\n            </RoomContext.Provider>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst RoomConsumer = RoomContext.Consumer;\r\n\r\nexport { RoomProvider, RoomConsumer, RoomContext };"]},"metadata":{},"sourceType":"module"}