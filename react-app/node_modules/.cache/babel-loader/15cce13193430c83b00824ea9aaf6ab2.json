{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\18562\\\\Desktop\\\\resort\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\18562\\\\Desktop\\\\resort\\\\src\\\\Context.js\";\nimport React, { Component } from 'react'; // import items from './data';\n\nimport Client from './Contentful';\nimport { async } from 'q';\nconst RoomContext = React.createContext(); // <RoomContext.Provider value={}\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      maxSize: 0,\n      minSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.getData = async () => {\n      try {\n        let response = await Client.getEntries({\n          content_type: \"resortRoom\"\n        });\n        let rooms = this.formatData(response.items);\n        let featuredRooms = rooms.filter(room => room.featured === true);\n        let maxPrice = Math.max(...rooms.map(item => item.price));\n        let maxSize = Math.max(...rooms.map(item => item.size));\n        this.setState({\n          rooms,\n          featuredRooms,\n          sortedRooms: rooms,\n          loading: false,\n          price: maxPrice,\n          maxPrice,\n          maxSize\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterRooms);\n    };\n\n    this.filterRooms = () => {\n      let _this$state = this.state,\n          rooms = _this$state.rooms,\n          type = _this$state.type,\n          capacity = _this$state.capacity,\n          price = _this$state.price,\n          minSize = _this$state.minSize,\n          maxSize = _this$state.maxSize,\n          breakfast = _this$state.breakfast,\n          pets = _this$state.pets; //    all the rooms\n\n      let tempRooms = [...rooms]; //    trasform values\n\n      capacity = parseInt(capacity);\n      price = parseInt(price); // filter by type\n\n      if (type !== 'all') {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      } //    filter by capacity\n\n\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      } // filter by price\n\n\n      tempRooms = tempRooms.filter(room => room.price <= price); // filter by size\n\n      tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize); // filter by breakfast\n\n      if (breakfast) {\n        tempRooms = tempRooms.filter(room => room.breakfast === true);\n      } // filter by pets\n\n\n      if (pets) {\n        tempRooms = tempRooms.filter(room => room.pets === true);\n      } // change state\n\n\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getData(); //     let rooms = this.formatData(items)\n    //     // console.log(\"rooms:\", rooms)\n    //     let featuredRooms = rooms.filter(room => room.featured === true);\n    //   let maxPrice = Math.max(...rooms.map(item=> item.price));\n    //   let maxSize = Math.max(...rooms.map(item=> item.size));\n    //     this.setState({\n    //         rooms,\n    //         featuredRooms,\n    //         sortedRooms: rooms,\n    //         loading: false,\n    //         price:maxPrice,\n    //         maxPrice,\n    //         maxSize,\n    //     });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let room = _objectSpread({}, item.fields, {\n        images,\n        id\n      });\n\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return React.createElement(RoomContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return React.createElement(RoomConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, value => React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["C:\\Users\\18562\\Desktop\\resort\\src\\Context.js"],"names":["React","Component","Client","async","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","maxSize","minSize","breakfast","pets","getData","response","getEntries","content_type","formatData","items","filter","room","featured","Math","max","map","item","size","setState","error","console","log","getRoom","slug","tempRooms","find","handleChange","event","target","value","checked","name","filterRooms","parseInt","componentDidMount","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import items from './data';\r\nimport Client from './Contentful'\r\nimport { async } from 'q';\r\n\r\n\r\n\r\n\r\nconst RoomContext = React.createContext();\r\n// <RoomContext.Provider value={}\r\nclass RoomProvider extends Component {\r\n    state = {\r\n        rooms: [],\r\n        sortedRooms: [],\r\n        featuredRooms: [],\r\n        loading: true,\r\n        type: 'all',\r\n        capacity:1,\r\n        price:0,\r\n        minPrice:0,\r\n        maxPrice:0,\r\n        maxSize:0,\r\n        minSize:0,\r\n        breakfast: false,\r\n        pets: false,\r\n    };\r\n    // getData\r\ngetData = async () =>{\r\n    try {\r\n        let response = await Client.getEntries({\r\n            content_type:\"resortRoom\"\r\n        });\r\n        let rooms = this.formatData(response.items);\r\n       \r\n        let featuredRooms = rooms.filter(room => room.featured === true);\r\n      let maxPrice = Math.max(...rooms.map(item=> item.price));\r\n      let maxSize = Math.max(...rooms.map(item=> item.size));\r\n\r\n        this.setState({\r\n            rooms,\r\n            featuredRooms,\r\n            sortedRooms: rooms,\r\n            loading: false,\r\n            price:maxPrice,\r\n            maxPrice,\r\n            maxSize,\r\n        });\r\n    } catch (error) {\r\n       console.log(error);\r\n        \r\n    }\r\n}\r\n\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    //     let rooms = this.formatData(items)\r\n    //     // console.log(\"rooms:\", rooms)\r\n    //     let featuredRooms = rooms.filter(room => room.featured === true);\r\n    //   let maxPrice = Math.max(...rooms.map(item=> item.price));\r\n    //   let maxSize = Math.max(...rooms.map(item=> item.size));\r\n\r\n    //     this.setState({\r\n    //         rooms,\r\n    //         featuredRooms,\r\n    //         sortedRooms: rooms,\r\n    //         loading: false,\r\n    //         price:maxPrice,\r\n    //         maxPrice,\r\n    //         maxSize,\r\n    //     });\r\n    }\r\n\r\n    formatData(items) {\r\n        let tempItems = items.map(item => {\r\n            let id = item.sys.id\r\n            let images = item.fields.images.map(image => image.fields.file.url);\r\n\r\n            let room = { ...item.fields,images,id }\r\n            return room;\r\n        });\r\n        return tempItems;\r\n    }\r\n    getRoom = (slug) => {\r\n        let tempRooms = [...this.state.rooms];\r\n        const room = tempRooms.find(room=> room.slug===slug);\r\n        return room;\r\n    }\r\n    handleChange = event => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox'?target.checked:target.value;\r\n        const name = event.target.name;\r\n        this.setState({\r\n            [name]:value\r\n        },\r\n        this.filterRooms)  \r\n    };\r\n    filterRooms = ()=>{\r\n       let {\r\n           rooms, type, capacity, price, minSize, maxSize, breakfast, pets\r\n       } = this.state\r\n    //    all the rooms\r\n       let tempRooms =[...rooms];\r\n    //    trasform values\r\n    capacity = parseInt(capacity);\r\n    price = parseInt(price);\r\n\r\n    // filter by type\r\n\r\n       if(type !== 'all'){\r\n           tempRooms = tempRooms.filter(room => room.type === type)\r\n       }\r\n\r\n    //    filter by capacity\r\n    if(capacity !==1){\r\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\r\n    }\r\n// filter by price\r\ntempRooms=tempRooms.filter( room => room.price <= price);\r\n// filter by size\r\ntempRooms=tempRooms.filter(room => room.size >= minSize && room.size <= maxSize)\r\n// filter by breakfast\r\nif(breakfast){\r\n    tempRooms= tempRooms.filter(room => room.breakfast === true)\r\n}\r\n// filter by pets\r\nif(pets){\r\n    tempRooms= tempRooms.filter(room => room.pets === true)\r\n}\r\n\r\n\r\n    // change state\r\n       this.setState({\r\n           sortedRooms:tempRooms\r\n       })\r\n        \r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <RoomContext.Provider\r\n                value={{ ...this.state, getRoom:this.getRoom, handleChange:this.handleChange }}>\r\n                {this.props.children}\r\n            </RoomContext.Provider>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst RoomConsumer = RoomContext.Consumer;\r\n\r\nexport function withRoomConsumer(Component){\r\n    return function ConsumerWrapper(props){\r\n        return (\r\n        <RoomConsumer>\r\n            {value => <Component {...props} context={value}/>}\r\n        </RoomConsumer>\r\n        );\r\n    };\r\n}\r\n\r\n\r\n\r\nexport { RoomProvider, RoomConsumer, RoomContext };"]},"metadata":{},"sourceType":"module"}