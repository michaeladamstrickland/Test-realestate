{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\18562\\\\Desktop\\\\resort\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\18562\\\\Desktop\\\\resort\\\\src\\\\Context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nimport Client from './Contentful';\nClient.getEntries({\n  content_type: \"resortRoom\"\n}).then(response => console.log(response.items));\nconst RoomContext = React.createContext(); // <RoomContext.Provider value={}\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      maxSize: 0,\n      minSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterRooms);\n    };\n\n    this.filterRooms = () => {\n      let _this$state = this.state,\n          rooms = _this$state.rooms,\n          type = _this$state.type,\n          capacity = _this$state.capacity,\n          price = _this$state.price,\n          minSize = _this$state.minSize,\n          maxSize = _this$state.maxSize,\n          breakfast = _this$state.breakfast,\n          pets = _this$state.pets; //    all the rooms\n\n      let tempRooms = [...rooms]; //    trasform values\n\n      capacity = parseInt(capacity);\n      price = parseInt(price); // filter by type\n\n      if (type !== 'all') {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      } //    filter by capacity\n\n\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      } // filter by price\n\n\n      tempRooms = tempRooms.filter(room => room.price <= price); // filter by size\n\n      tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize); // filter by breakfast\n\n      if (breakfast) {\n        tempRooms = tempRooms.filter(room => room.breakfast === true);\n      } // filter by pets\n\n\n      if (pets) {\n        tempRooms = tempRooms.filter(room => room.pets === true);\n      } // change state\n\n\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n\n  // getData\n  componentDidMount() {\n    // this.getData\n    let rooms = this.formatData(items); // console.log(\"rooms:\", rooms)\n\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let room = _objectSpread({}, item.fields, {\n        images,\n        id\n      });\n\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return React.createElement(RoomContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return React.createElement(RoomConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, value => React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["C:\\Users\\18562\\Desktop\\resort\\src\\Context.js"],"names":["React","Component","items","Client","getEntries","content_type","then","response","console","log","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","maxSize","minSize","breakfast","pets","getRoom","slug","tempRooms","room","find","handleChange","event","target","value","checked","name","setState","filterRooms","parseInt","filter","size","componentDidMount","formatData","featured","Math","max","map","item","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport items from './data';\r\nimport Client from './Contentful'\r\n\r\n\r\nClient.getEntries({\r\n    content_type:\"resortRoom\"\r\n}).then(response => console.log(response.items));\r\n\r\nconst RoomContext = React.createContext();\r\n// <RoomContext.Provider value={}\r\nclass RoomProvider extends Component {\r\n    state = {\r\n        rooms: [],\r\n        sortedRooms: [],\r\n        featuredRooms: [],\r\n        loading: true,\r\n        type: 'all',\r\n        capacity:1,\r\n        price:0,\r\n        minPrice:0,\r\n        maxPrice:0,\r\n        maxSize:0,\r\n        minSize:0,\r\n        breakfast: false,\r\n        pets: false,\r\n    };\r\n    // getData\r\n\r\n    componentDidMount() {\r\n        // this.getData\r\n        let rooms = this.formatData(items)\r\n        // console.log(\"rooms:\", rooms)\r\n        let featuredRooms = rooms.filter(room => room.featured === true);\r\n      let maxPrice = Math.max(...rooms.map(item=> item.price));\r\n      let maxSize = Math.max(...rooms.map(item=> item.size));\r\n\r\n        this.setState({\r\n            rooms,\r\n            featuredRooms,\r\n            sortedRooms: rooms,\r\n            loading: false,\r\n            price:maxPrice,\r\n            maxPrice,\r\n            maxSize,\r\n        });\r\n    }\r\n\r\n    formatData(items) {\r\n        let tempItems = items.map(item => {\r\n            let id = item.sys.id\r\n            let images = item.fields.images.map(image => image.fields.file.url);\r\n\r\n            let room = { ...item.fields,images,id }\r\n            return room;\r\n        });\r\n        return tempItems;\r\n    }\r\n    getRoom = (slug) => {\r\n        let tempRooms = [...this.state.rooms];\r\n        const room = tempRooms.find(room=> room.slug===slug);\r\n        return room;\r\n    }\r\n    handleChange = event => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox'?target.checked:target.value;\r\n        const name = event.target.name;\r\n        this.setState({\r\n            [name]:value\r\n        },\r\n        this.filterRooms)  \r\n    };\r\n    filterRooms = ()=>{\r\n       let {\r\n           rooms, type, capacity, price, minSize, maxSize, breakfast, pets\r\n       } = this.state\r\n    //    all the rooms\r\n       let tempRooms =[...rooms];\r\n    //    trasform values\r\n    capacity = parseInt(capacity);\r\n    price = parseInt(price);\r\n\r\n    // filter by type\r\n\r\n       if(type !== 'all'){\r\n           tempRooms = tempRooms.filter(room => room.type === type)\r\n       }\r\n\r\n    //    filter by capacity\r\n    if(capacity !==1){\r\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\r\n    }\r\n// filter by price\r\ntempRooms=tempRooms.filter( room => room.price <= price);\r\n// filter by size\r\ntempRooms=tempRooms.filter(room => room.size >= minSize && room.size <= maxSize)\r\n// filter by breakfast\r\nif(breakfast){\r\n    tempRooms= tempRooms.filter(room => room.breakfast === true)\r\n}\r\n// filter by pets\r\nif(pets){\r\n    tempRooms= tempRooms.filter(room => room.pets === true)\r\n}\r\n\r\n\r\n    // change state\r\n       this.setState({\r\n           sortedRooms:tempRooms\r\n       })\r\n        \r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <RoomContext.Provider\r\n                value={{ ...this.state, getRoom:this.getRoom, handleChange:this.handleChange }}>\r\n                {this.props.children}\r\n            </RoomContext.Provider>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst RoomConsumer = RoomContext.Consumer;\r\n\r\nexport function withRoomConsumer(Component){\r\n    return function ConsumerWrapper(props){\r\n        return (\r\n        <RoomConsumer>\r\n            {value => <Component {...props} context={value}/>}\r\n        </RoomConsumer>\r\n        );\r\n    };\r\n}\r\n\r\n\r\n\r\nexport { RoomProvider, RoomConsumer, RoomContext };"]},"metadata":{},"sourceType":"module"}